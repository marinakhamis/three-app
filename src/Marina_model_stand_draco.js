/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF, useDepthBuffer, Text, useAnimations } from '@react-three/drei'

export default function Model({ ...props }) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/marina_model_stand_draco.gltf')


  const { actions } = useAnimations(animations, group)
  // const head = nodes.Head
  const depthBuffer = useDepthBuffer({ size: 0 });

  const [headPos, setHeadPos] = useState({})

  // MOUSEMOVE ANIMATION
  const moveHead = (event) => {
    nodes.Head.rotation.y = (event.clientX / window.innerWidth) - 0.5;
    nodes.Head.rotation.x = (event.clientY / window.innerHeight) - 0.5;
  }

  useEffect(() => {
    actions['Armature|mixamo.com|Layer0'].play();
  }, []);


  // window.addEventListener('click', (event) => {
  //   nodes.Head.rotation.y = (event.clientX / window.innerWidth) - 0.5;
  //   nodes.Head.rotation.x = (event.clientY / window.innerHeight) - 0.5;

  //   // nodes.Head.position.x = ((event.clientX / window.innerWidth) - 0.5) * 15;
  //   // nodes.Head.position.y = ((event.clientY / window.innerHeight) - 0.5) * -15;
  // });



  return (
    <>
      {/* <MovingSpot depthBuffer={depthBuffer} color="#b00c3f" position={[1, 8, 3]} /> */}
      {/* <MovingSpot depthBuffer={depthBuffer} color="#426eff" position={[-2, 6, 2]} /> */}
      {/* <MovingSpot depthBuffer={depthBuffer} color="#b00c3f" position={[1, 7, 1]} /> */}
      <group ref={group} {...props} dispose={null} scale={4}>
        <group name="Scene">
          <group name="Armature">
            {/* <group name="Armature" onPointerMove={moveHead}> */}
            <primitive object={nodes.Hips} />
            <skinnedMesh name="Wolf3D_Body" geometry={nodes.Wolf3D_Body.geometry} material={materials.Wolf3D_Body} skeleton={nodes.Wolf3D_Body.skeleton} />
            <skinnedMesh name="Wolf3D_Hair" geometry={nodes.Wolf3D_Hair.geometry} material={materials.Wolf3D_Hair} skeleton={nodes.Wolf3D_Hair.skeleton} />
            <skinnedMesh name="Wolf3D_Outfit_Bottom" geometry={nodes.Wolf3D_Outfit_Bottom.geometry} material={materials.Wolf3D_Outfit_Bottom} skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton} />
            <skinnedMesh name="Wolf3D_Outfit_Footwear" geometry={nodes.Wolf3D_Outfit_Footwear.geometry} material={materials.Wolf3D_Outfit_Footwear} skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton} />
            <skinnedMesh name="Wolf3D_Outfit_Top" geometry={nodes.Wolf3D_Outfit_Top.geometry} material={materials.Wolf3D_Outfit_Top} skeleton={nodes.Wolf3D_Outfit_Top.skeleton} />
            <skinnedMesh name="EyeLeft" geometry={nodes.EyeLeft.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeLeft.skeleton} morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary} morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences} />
            <skinnedMesh name="EyeRight" geometry={nodes.EyeRight.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeRight.skeleton} morphTargetDictionary={nodes.EyeRight.morphTargetDictionary} morphTargetInfluences={nodes.EyeRight.morphTargetInfluences} />
            <skinnedMesh name="Wolf3D_Head" geometry={nodes.Wolf3D_Head.geometry} material={materials.Wolf3D_Skin} skeleton={nodes.Wolf3D_Head.skeleton} morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences} />
            <skinnedMesh name="Wolf3D_Teeth" geometry={nodes.Wolf3D_Teeth.geometry} material={materials.Wolf3D_Teeth} skeleton={nodes.Wolf3D_Teeth.skeleton} morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences} />
          </group>
        </group>
      </group>
    </>
  )
}

useGLTF.preload('/marina_model_stand_draco.gltf')
